D G "__PCH__" 0 248 ""4.057""
D G "__DEVICE__" 0 248 "2480"
D G "__DATE__" 0 248 ""10-Set-08""
D G "__TIME__" 0 248 ""00:26:02"" "Standard Header file for the PIC18F2480 device ////////////////"
d G "PIN_A0" 2 25 "31744"
d G "PIN_A1" 2 26 "31745"
d G "PIN_A2" 2 27 "31746"
d G "PIN_A3" 2 28 "31747"
d G "PIN_A4" 2 29 "31748"
d G "PIN_A5" 2 30 "31749"
d G "PIN_A6" 2 31 "31750"
d G "PIN_A7" 2 32 "31751"
d G "PIN_B0" 2 34 "31752"
d G "PIN_B1" 2 35 "31753"
d G "PIN_B2" 2 36 "31754"
d G "PIN_B3" 2 37 "31755"
d G "PIN_B4" 2 38 "31756"
d G "PIN_B5" 2 39 "31757"
d G "PIN_B6" 2 40 "31758"
d G "PIN_B7" 2 41 "31759"
d G "PIN_C0" 2 43 "31760"
d G "PIN_C1" 2 44 "31761"
d G "PIN_C2" 2 45 "31762"
d G "PIN_C3" 2 46 "31763"
d G "PIN_C4" 2 47 "31764"
d G "PIN_C5" 2 48 "31765"
d G "PIN_C6" 2 49 "31766"
d G "PIN_C7" 2 50 "31767"
d G "PIN_E3" 2 52 "31779"
d G "FALSE" 2 55 "0"
d G "TRUE" 2 56 "1"
d G "BYTE" 2 58 "int8"
d G "BOOLEAN" 2 59 "int1"
d G "getc" 2 61 "getch"
d G "fgetc" 2 62 "getch"
d G "getchar" 2 63 "getch"
d G "putc" 2 64 "putchar"
d G "fputc" 2 65 "putchar"
d G "fgets" 2 66 "gets"
d G "fputs" 2 67 "puts"
d G "WDT_TIMEOUT" 2 73 "7"
d G "MCLR_FROM_SLEEP" 2 74 "11"
d G "MCLR_FROM_RUN" 2 75 "15"
d G "NORMAL_POWER_UP" 2 76 "12"
d G "BROWNOUT_RESTART" 2 77 "14"
d G "WDT_FROM_SLEEP" 2 78 "3"
d G "RESET_INSTRUCTION" 2 79 "0"
d G "RTCC_INTERNAL" 2 86 "0"
d G "RTCC_EXT_L_TO_H" 2 87 "32"
d G "RTCC_EXT_H_TO_L" 2 88 "48"
d G "RTCC_DIV_1" 2 90 "8"
d G "RTCC_DIV_2" 2 91 "0"
d G "RTCC_DIV_4" 2 92 "1"
d G "RTCC_DIV_8" 2 93 "2"
d G "RTCC_DIV_16" 2 94 "3"
d G "RTCC_DIV_32" 2 95 "4"
d G "RTCC_DIV_64" 2 96 "5"
d G "RTCC_DIV_128" 2 97 "6"
d G "RTCC_DIV_256" 2 98 "7"
d G "RTCC_OFF" 2 100 "0x80"
d G "RTCC_8_BIT" 2 102 "0x40"
d G "WDT_ON" 2 113 "0x100"
d G "WDT_OFF" 2 114 "0"
d G "T1_DISABLED" 2 120 "0"
d G "T1_INTERNAL" 2 121 "0x85"
d G "T1_EXTERNAL" 2 122 "0x87"
d G "T1_EXTERNAL_SYNC" 2 123 "0x83"
d G "T1_CLK_OUT" 2 125 "8"
d G "T1_DIV_BY_1" 2 127 "0"
d G "T1_DIV_BY_2" 2 128 "0x10"
d G "T1_DIV_BY_4" 2 129 "0x20"
d G "T1_DIV_BY_8" 2 130 "0x30"
d G "T2_DISABLED" 2 135 "0"
d G "T2_DIV_BY_1" 2 136 "4"
d G "T2_DIV_BY_4" 2 137 "5"
d G "T2_DIV_BY_16" 2 138 "6"
d G "T3_DISABLED" 2 144 "0"
d G "T3_INTERNAL" 2 145 "0x85"
d G "T3_EXTERNAL" 2 146 "0x87"
d G "T3_EXTERNAL_SYNC" 2 147 "0x83"
d G "T3_DIV_BY_1" 2 149 "0"
d G "T3_DIV_BY_2" 2 150 "0x10"
d G "T3_DIV_BY_4" 2 151 "0x20"
d G "T3_DIV_BY_8" 2 152 "0x30"
d G "CCP_OFF" 2 158 "0"
d G "CCP_CAPTURE_FE" 2 159 "4"
d G "CCP_CAPTURE_RE" 2 160 "5"
d G "CCP_CAPTURE_DIV_4" 2 161 "6"
d G "CCP_CAPTURE_DIV_16" 2 162 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 163 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 164 "9"
d G "CCP_COMPARE_INT" 2 165 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 166 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 167 "0xB"
d G "CCP_PWM" 2 168 "0xC"
d G "CCP_PWM_PLUS_1" 2 169 "0x1c"
d G "CCP_PWM_PLUS_2" 2 170 "0x2c"
d G "CCP_PWM_PLUS_3" 2 171 "0x3c"
d G "CCP_USE_TIMER3" 2 172 "0x100"
v G "CCP_1" 2 173 "int16"
d G "SPI_MASTER" 2 180 "0x20"
d G "SPI_SLAVE" 2 181 "0x24"
d G "SPI_L_TO_H" 2 182 "0"
d G "SPI_H_TO_L" 2 183 "0x10"
d G "SPI_CLK_DIV_4" 2 184 "0"
d G "SPI_CLK_DIV_16" 2 185 "1"
d G "SPI_CLK_DIV_64" 2 186 "2"
d G "SPI_CLK_T2" 2 187 "3"
d G "SPI_SS_DISABLED" 2 188 "1"
d G "SPI_SAMPLE_AT_END" 2 190 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 191 "0x4000"
d G "UART_ADDRESS" 2 197 "2"
d G "UART_DATA" 2 198 "4"
d G "UART_AUTODETECT" 2 199 "8"
d G "UART_AUTODETECT_NOWAIT" 2 200 "9"
d G "UART_WAKEUP_ON_RDA" 2 201 "10"
d G "UART_SEND_BREAK" 2 202 "13"
d G "VREF_LOW" 2 206 "0xa0"
d G "VREF_HIGH" 2 207 "0x80"
d G "VREF_F5" 2 209 "0x40"
d G "VREF_COMP" 2 210 "0x10"
d G "LVD_LVDIN" 2 215 "0x1F"
d G "LVD_45" 2 216 "0x1E"
d G "LVD_42" 2 217 "0x1D"
d G "LVD_40" 2 218 "0x1C"
d G "LVD_38" 2 219 "0x1B"
d G "LVD_36" 2 220 "0x1A"
d G "LVD_35" 2 221 "0x19"
d G "LVD_33" 2 222 "0x18"
d G "LVD_30" 2 223 "0x17"
d G "LVD_28" 2 224 "0x16"
d G "LVD_27" 2 225 "0x15"
d G "LVD_25" 2 226 "0x14"
d G "LVD_24" 2 227 "0x13"
d G "LVD_23" 2 228 "0x12"
d G "LVD_22" 2 229 "0x11"
d G "LVD_21" 2 230 "0x10"
d G "LVD_TRIGGER_BELOW" 2 232 "0"
d G "LVD_TRIGGER_ABOVE" 2 233 "0x80"
d G "OSC_31KHZ" 2 239 "0"
d G "OSC_125KHZ" 2 240 "0x10"
d G "OSC_250KHZ" 2 241 "0x20"
d G "OSC_500KHZ" 2 242 "0x30"
d G "OSC_1MHZ" 2 243 "0x40"
d G "OSC_2MHZ" 2 244 "0x50"
d G "OSC_4MHZ" 2 245 "0x60"
d G "OSC_8MHZ" 2 246 "0x70"
d G "OSC_16MHZ" 2 247 "0x4060"
d G "OSC_32MHZ" 2 248 "0x4070"
d G "OSC_TIMER1" 2 250 "1"
d G "OSC_INTRC" 2 251 "2"
d G "OSC_NORMAL" 2 252 "0"
d G "OSC_IDLE_MODE" 2 254 "0x80"
d G "OSC_31250" 2 255 "0x8000"
d G "OSC_PLL_ON" 2 256 "0x4000"
d G "OSC_PLL_OFF" 2 257 "0"
d G "OSC_STATE_STABLE" 2 261 "4"
d G "OSC_STATE_EXT_RUNNING" 2 262 "8"
d G "ADC_OFF" 2 269 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 270 "0x100"
d G "ADC_CLOCK_DIV_4" 2 271 "0x04"
d G "ADC_CLOCK_DIV_8" 2 272 "0x01"
d G "ADC_CLOCK_DIV_16" 2 273 "0x05"
d G "ADC_CLOCK_DIV_32" 2 274 "0x02"
d G "ADC_CLOCK_DIV_64" 2 275 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 276 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 278 "0x00"
d G "ADC_TAD_MUL_2" 2 279 "0x08"
d G "ADC_TAD_MUL_4" 2 280 "0x10"
d G "ADC_TAD_MUL_6" 2 281 "0x18"
d G "ADC_TAD_MUL_8" 2 282 "0x20"
d G "ADC_TAD_MUL_12" 2 283 "0x28"
d G "ADC_TAD_MUL_16" 2 284 "0x30"
d G "ADC_TAD_MUL_20" 2 285 "0x38"
d G "NO_ANALOGS" 2 288 "0x0F" "None"
d G "ALL_ANALOG" 2 289 "0x00" "A0 A1 A2 A3 A5 B1 B4 B0"
d G "AN0_TO_AN9" 2 290 "0x05" "A0 A1 A2 A3 A5 B1 B4"
d G "AN0_TO_AN8" 2 291 "0x06" "A0 A1 A2 A3 A5 B1"
d G "AN0_TO_AN4" 2 292 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 293 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 294 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 295 "0x0D" "A0 A1"
d G "AN0" 2 296 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 2 297 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 2 298 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 2 299 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 2 300 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 2 301 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 2 302 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 2 303 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 2 304 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 2 305 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 308 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 309 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 310 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 311 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 315 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 316 "1"
d G "ADC_READ_ONLY" 2 317 "6"
d G "L_TO_H" 2 329 "0x40"
d G "H_TO_L" 2 330 "0"
d G "GLOBAL" 2 332 "0xF2C0"
d G "INT_RTCC" 2 333 "0xF220"
d G "INT_TIMER0" 2 334 "0xF220"
d G "INT_TIMER1" 2 335 "0x9D01"
d G "INT_TIMER2" 2 336 "0x9D02"
d G "INT_TIMER3" 2 337 "0xA002"
d G "INT_EXT" 2 338 "0xF210"
d G "INT_EXT1" 2 339 "0xF008"
d G "INT_EXT2" 2 340 "0xF010"
d G "INT_RB" 2 341 "0xFFF208"
d G "INT_AD" 2 342 "0x9D40"
d G "INT_RDA" 2 343 "0x9D20"
d G "INT_TBE" 2 344 "0x9D10"
d G "INT_SSP" 2 345 "0x9D08"
d G "INT_CCP1" 2 346 "0x9D04"
d G "INT_BUSCOL" 2 347 "0xA008"
d G "INT_LOWVOLT" 2 348 "0xA004"
d G "INT_CANIRX" 2 349 "0xA380"
d G "INT_CANWAKE" 2 350 "0xA340"
d G "INT_CANERR" 2 351 "0xA320"
d G "INT_EEPROM" 2 352 "0xA010"
d G "INT_CANTX2" 2 353 "0xA310"
d G "INT_CANTX1" 2 354 "0xA308"
d G "INT_CANTX0" 2 355 "0xA304"
d G "INT_CANRX1" 2 356 "0xA302"
d G "INT_CANRX0" 2 357 "0xA301"
d G "INT_OSCF" 2 358 "0xA080"
V G "x" 0 2 "int8"
D G "CAN_USE_EXTENDED_ID" 0 4 "FALSE"
D G "__CCS_CAN18xxx8_LIB_DEFINES__" 4 20 ""
D G "CAN_DO_DEBUG" 4 23 "FALSE"
D G "CAN_BRG_SYNCH_JUMP_WIDTH" 4 31 "0" "synchronized jump width (def: 1 x Tq)"
D G "CAN_BRG_PRESCALAR" 4 35 "4" "baud rate generator prescalar (def: 4) ( Tq = (2 x (PRE + 1))/Fosc )"
D G "CAN_BRG_SEG_2_PHASE_TS" 4 39 "TRUE" "phase segment 2 time select bit (def: freely programmable)"
D G "CAN_BRG_SAM" 4 43 "0" "sample of the can bus line (def: bus line is sampled 1 times prior to sample point)"
D G "CAN_BRG_PHASE_SEGMENT_1" 4 47 "5" "phase segment 1 (def: 6 x Tq)"
D G "CAN_BRG_PROPAGATION_TIME" 4 51 "2" "propagation time select (def: 3 x Tq)"
D G "CAN_BRG_WAKE_FILTER" 4 55 "FALSE" "selects can bus line filter for wake up bit"
D G "CAN_BRG_PHASE_SEGMENT_2" 4 59 "5" "phase segment 2 time select (def: 6 x Tq)"
D G "CAN_USE_RX_DOUBLE_BUFFER" 4 63 "TRUE" "if buffer 0 overflows, do NOT use buffer 1 to put buffer 0 data"
D G "CAN_ENABLE_DRIVE_HIGH" 4 67 "0"
D G "CAN_ENABLE_CAN_CAPTURE" 4 71 "0"
V G "CANCON" 4 83 "{int1 void0,int3 win,int1 abat,int3 reqop}"
V G "CANSTAT" 4 95 "{int1 void0,int3 icode,int1 void4,int3 opmode}"
V G "COMSTAT" 4 108 "{int1 ewarn,int1 rxwarn,int1 txwarn,int1 rxbp,int1 txbp,int1 txbo,int1 rx1ovfl,int1 rx0ovfl}"
V G "BRGCON1" 4 115 "{int6 brp,int2 sjw}"
V G "BRGCON2" 4 124 "{int3 prseg,int3 seg1ph,int1 sam,int1 seg2phts}"
V G "BRGCON3" 4 133 "{int3 seg2ph,int3 void543,int1 wakfil,int1 void7}"
V G "CIOCON" 4 142 "{int4 void3210,int1 cancap,int1 endrhi,int2 void76}"
V G "TXB0CON" 4 155 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB1CON" 4 156 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB2CON" 4 157 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXBaCON" 4 158 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
D G "RX0MASK" 4 181 "0xF1B" "rxm0eidl"
D G "RX1MASK" 4 182 "0xF1F" "rxm1eidl"
D G "RX0FILTER0" 4 183 "0xF03" "rxf0eidl"
D G "RX0FILTER1" 4 184 "0xF07" "rxf1eidl"
D G "RX1FILTER2" 4 185 "0xF0B" "rxf2eidl"
D G "RX1FILTER3" 4 186 "0xF0F" "rxf3eidl"
D G "RX1FILTER4" 4 187 "0xF13" "rxf4eidl"
D G "RX1FILTER5" 4 188 "0xF17" "rxf5eidl"
D G "RXB0ID" 4 189 "0xF64" "rxb0eidl"
D G "RXB1ID" 4 190 "0xF54" "rxb1eidl"
D G "TXB0ID" 4 191 "0xF44" "txb0eidl"
D G "TXB1ID" 4 192 "0xF34" "txb1eidl"
D G "TXB2ID" 4 193 "0xF24" "tsb2eidl"
D G "TXRXBaID" 4 194 "0xF64"
V G "TXB0DLC" 4 211 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB1DLC" 4 212 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB2DLC" 4 213 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXBaDLC" 4 214 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "RXB0CON" 4 236 "{int1 filthit0,int1 jtoff,int1 rxb0dben,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "RXB1CON" 4 246 "{int3 filthit,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "TXRXBaSIDL" 4 269 "{int3 void012,int1 ext,int1 srr,int3 void567}"
V G "RXB0DLC" 4 280 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXB1DLC" 4 281 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXBaDLC" 4 282 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
D G "CAN_MASK_ACCEPT_ALL" 4 337 "0"
F G "can_init" 4 360 "void()"
F G "can_set_baud" 4 361 "void()"
V L "mode" 4 362 "CAN_OP_MODE"
F G "can_set_mode" 4 362 "void(CAN_OP_MODE mode)"
V L "addr" 4 363 "*int8"
V L "id" 4 363 "int32"
V L "ext" 4 363 "int8"
F G "can_set_id" 4 363 "void(*int8 addr,int32 id,int8 ext)"
V L "addr" 4 364 "*int8"
V L "ext" 4 364 "int8"
F G "can_get_id" 4 364 "int32(*int8 addr,int8 ext)"
V L "id" 4 365 "int32"
V L "data" 4 365 "*int8"
V L "len" 4 365 "int8"
V L "priority" 4 365 "int8"
V L "ext" 4 365 "int8"
V L "rtr" 4 365 "int8"
F G "can_putd" 4 365 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)"
V L "id" 4 366 "int32"
V L "data" 4 366 "*int8"
V L "len" 4 366 "int8"
V L "stat" 4 366 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
F G "can_getd" 4 366 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv} stat)"
D G "can_debug" 3 61 ""
D G "can_kbhit" 3 66 "()                 (RXB0CON.rxful || RXB1CON.rxful)"
D G "can_tbe" 3 67 "()                   (!TXB0CON.txreq || !TXB1CON.txreq || !TXB2CON.txreq)"
D G "can_abort" 3 68 "()                 (CANCON.abat=1)"
C L "can_getd" 3 65 11 "FUNCTION"
F G "can_init" 3 88 "void()"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_set_baud" 3 65 6 "FUNCTION"
F G "can_set_baud" 3 127 "void()"
V L "mode" 3 140 "CAN_OP_MODE"
F G "can_set_mode" 3 140 "void(CAN_OP_MODE mode)"
C L "can_set_id" 3 65 8 "FUNCTION"
V L "addr" 3 160 "*int8"
V L "id" 3 160 "int32"
V L "ext" 3 160 "int8"
F G "can_set_id" 3 160 "void(*int8 addr,int32 id,int8 ext)"
V L "ptr" 3 161 "*int8"
C L "can_set_id" 3 65 2 "FUNCTION"
C L "can_set_id" 3 65 2 "FUNCTION"
C L "can_set_id" 3 65 2 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 2 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 9 "FUNCTION"
V L "addr" 3 220 "*int8"
V L "ext" 3 220 "int8"
F G "can_get_id" 3 220 "int32(*int8 addr,int8 ext)"
V L "ret" 3 221 "int32"
V L "ptr" 3 222 "*int8"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_putd" 3 65 15 "FUNCTION"
V L "id" 3 274 "int32"
V L "data" 3 274 "*int8"
V L "len" 3 274 "int8"
V L "priority" 3 274 "int8"
V L "ext" 3 274 "int8"
V L "rtr" 3 274 "int8"
F G "can_putd" 3 274 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)"
V L "i" 3 275 "int8"
V L "txd0" 3 276 "*int8"
V L "port" 3 277 "int8"
C L "can_putd" 3 65 2 "FUNCTION"
C L "can_putd" 3 65 1 "FUNCTION"
C L "can_putd" 3 65 1 "FUNCTION"
C L "can_putd" 3 65 1 "FUNCTION"
C L "can_putd" 3 65 1 "FUNCTION"
C L "can_getd" 3 65 11 "FUNCTION"
V L "id" 3 357 "int32"
V L "data" 3 357 "*int8"
V L "len" 3 357 "int8"
V L "stat" 3 357 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
F G "can_getd" 3 358 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv} stat)"
V L "i" 3 359 "int8"
V L "ptr" 3 360 "*int8"
C L "can_getd" 3 65 1 "FUNCTION"
D G "CAN_RECEIVE_STACK_SIZE" 0 7 "1"
V G "can_rspoint" 0 8 "int8"
V G "can_rstack" 0 9 "int8[1][14]"
V G "can_rsfull" 0 10 "int1"
D G "can_receiver_full" 0 11 "() can_rsfull"
D G "CAN_TRANSMIT_STACK_SIZE" 0 12 "1"
V G "can_tspoint" 0 13 "int8"
V G "can_tstack" 0 14 "int8[1][13]"
V G "can_tsempty" 0 15 "int1"
D G "can_transmitter_empty" 0 16 "() can_tsempty"
F G "canReceive" 0 19 "void()"
V L "rx_id" 0 20 "int32"
V L "rx_len" 0 21 "int8"
V L "rx_stat" 0 21 "int8"
V L "buffer" 0 22 "int8[8]"
V L "i" 0 23 "int8"
V L "rx_id" 0 51 "int32"
V L "buffer" 0 51 "*int8"
V L "rx_len" 0 51 "int8"
V L "rx_stat" 0 51 "int8"
F G "can_Pop" 0 52 "int8(int32 rx_id,*int8 buffer,int8 rx_len,int8 rx_stat)"
V L "i" 0 53 "int8"
F G "canTransmit" 0 81 "void()"
V L "tx_id" 0 82 "int32"
V L "tx_length" 0 83 "int8"
V L "tx_priority" 0 84 "int8"
V L "tx_buffer" 0 85 "int8[8]"
V L "tx_extendedID" 0 86 "int1"
V L "tx_emptyframe" 0 87 "int1"
V L "i" 0 88 "int8"
V L "tx_id" 0 122 "int32"
V L "tx_buffer" 0 122 "*int8"
V L "tx_length" 0 122 "int8"
V L "tx_priority" 0 122 "int8"
V L "tx_extendedID" 0 122 "int8"
V L "tx_emptyframe" 0 122 "int8"
F G "can_push" 0 123 "int8(int32 tx_id,*int8 tx_buffer,int8 tx_length,int8 tx_priority,int8 tx_extendedID,int8 tx_emptyframe)"
V L "i" 0 124 "int8"
F G "canrx0_int" 0 146 "void()"
C L "canrx0_int" 0 149 1 "FUNCTION"
F G "canrx1_int" 0 152 "void()"
C L "canrx1_int" 0 149 1 "FUNCTION"
F G "cantx0_int" 0 158 "void()"
C L "cantx0_int" 0 149 1 "FUNCTION"
F G "cantx1_int" 0 163 "void()"
C L "cantx1_int" 0 149 1 "FUNCTION"
F G "cantx2_int" 0 168 "void()"
C L "cantx2_int" 0 149 1 "FUNCTION"
F G "canirx_int" 0 173 "void()"
C L "canirx_int" 0 149 1 "FUNCTION"
F G "canerr_int" 0 178 "void()"
C L "canerr_int" 0 149 1 "FUNCTION"
F G "MAIN" 0 183 "void()"
C L "MAIN" 0 149 2 "FUNCTION"
C L "MAIN" 0 149 2 "FUNCTION"
C L "MAIN" 0 149 3 "FUNCTION"
V L "data" 0 239 "int8[4]"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_vref" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
