D G "__PCH__" 0 412 ""4.057""
D G "__DEVICE__" 0 412 "2480"
D G "__DATE__" 0 412 ""11-Out-08""
D G "__TIME__" 0 412 ""22:50:17""
D G "inte0" 0 2 "pin_a0"
D G "inte1" 0 3 "pin_a1"
D G "inte2" 0 4 "pin_a2"
D G "inte3" 0 5 "pin_a3"
D G "inte4" 0 6 "pin_a4"
D G "inte5" 0 7 "pin_a5"
D G "inte6" 0 8 "pin_b1"
D G "inte7" 0 9 "pin_b0"
d G "PIN_A0" 2 25 "31744"
d G "PIN_A1" 2 26 "31745"
d G "PIN_A2" 2 27 "31746"
d G "PIN_A3" 2 28 "31747"
d G "PIN_A4" 2 29 "31748"
d G "PIN_A5" 2 30 "31749"
d G "PIN_A6" 2 31 "31750"
d G "PIN_A7" 2 32 "31751"
d G "PIN_B0" 2 34 "31752"
d G "PIN_B1" 2 35 "31753"
d G "PIN_B2" 2 36 "31754"
d G "PIN_B3" 2 37 "31755"
d G "PIN_B4" 2 38 "31756"
d G "PIN_B5" 2 39 "31757"
d G "PIN_B6" 2 40 "31758"
d G "PIN_B7" 2 41 "31759"
d G "PIN_C0" 2 43 "31760"
d G "PIN_C1" 2 44 "31761"
d G "PIN_C2" 2 45 "31762"
d G "PIN_C3" 2 46 "31763"
d G "PIN_C4" 2 47 "31764"
d G "PIN_C5" 2 48 "31765"
d G "PIN_C6" 2 49 "31766"
d G "PIN_C7" 2 50 "31767"
d G "PIN_E3" 2 52 "31779"
d G "FALSE" 2 55 "0"
d G "TRUE" 2 56 "1"
d G "BYTE" 2 58 "int8"
d G "BOOLEAN" 2 59 "int1"
d G "getc" 2 61 "getch"
d G "fgetc" 2 62 "getch"
d G "getchar" 2 63 "getch"
d G "putc" 2 64 "putchar"
d G "fputc" 2 65 "putchar"
d G "fgets" 2 66 "gets"
d G "fputs" 2 67 "puts"
d G "WDT_TIMEOUT" 2 73 "7"
d G "MCLR_FROM_SLEEP" 2 74 "11"
d G "MCLR_FROM_RUN" 2 75 "15"
d G "NORMAL_POWER_UP" 2 76 "12"
d G "BROWNOUT_RESTART" 2 77 "14"
d G "WDT_FROM_SLEEP" 2 78 "3"
d G "RESET_INSTRUCTION" 2 79 "0"
d G "RTCC_INTERNAL" 2 86 "0"
d G "RTCC_EXT_L_TO_H" 2 87 "32"
d G "RTCC_EXT_H_TO_L" 2 88 "48"
d G "RTCC_DIV_1" 2 90 "8"
d G "RTCC_DIV_2" 2 91 "0"
d G "RTCC_DIV_4" 2 92 "1"
d G "RTCC_DIV_8" 2 93 "2"
d G "RTCC_DIV_16" 2 94 "3"
d G "RTCC_DIV_32" 2 95 "4"
d G "RTCC_DIV_64" 2 96 "5"
d G "RTCC_DIV_128" 2 97 "6"
d G "RTCC_DIV_256" 2 98 "7"
d G "RTCC_OFF" 2 100 "0x80"
d G "RTCC_8_BIT" 2 102 "0x40"
d G "WDT_ON" 2 113 "0x100"
d G "WDT_OFF" 2 114 "0"
d G "T1_DISABLED" 2 120 "0"
d G "T1_INTERNAL" 2 121 "0x85"
d G "T1_EXTERNAL" 2 122 "0x87"
d G "T1_EXTERNAL_SYNC" 2 123 "0x83"
d G "T1_CLK_OUT" 2 125 "8"
d G "T1_DIV_BY_1" 2 127 "0"
d G "T1_DIV_BY_2" 2 128 "0x10"
d G "T1_DIV_BY_4" 2 129 "0x20"
d G "T1_DIV_BY_8" 2 130 "0x30"
d G "T2_DISABLED" 2 135 "0"
d G "T2_DIV_BY_1" 2 136 "4"
d G "T2_DIV_BY_4" 2 137 "5"
d G "T2_DIV_BY_16" 2 138 "6"
d G "T3_DISABLED" 2 144 "0"
d G "T3_INTERNAL" 2 145 "0x85"
d G "T3_EXTERNAL" 2 146 "0x87"
d G "T3_EXTERNAL_SYNC" 2 147 "0x83"
d G "T3_DIV_BY_1" 2 149 "0"
d G "T3_DIV_BY_2" 2 150 "0x10"
d G "T3_DIV_BY_4" 2 151 "0x20"
d G "T3_DIV_BY_8" 2 152 "0x30"
d G "CCP_OFF" 2 158 "0"
d G "CCP_CAPTURE_FE" 2 159 "4"
d G "CCP_CAPTURE_RE" 2 160 "5"
d G "CCP_CAPTURE_DIV_4" 2 161 "6"
d G "CCP_CAPTURE_DIV_16" 2 162 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 163 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 164 "9"
d G "CCP_COMPARE_INT" 2 165 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 166 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 167 "0xB"
d G "CCP_PWM" 2 168 "0xC"
d G "CCP_PWM_PLUS_1" 2 169 "0x1c"
d G "CCP_PWM_PLUS_2" 2 170 "0x2c"
d G "CCP_PWM_PLUS_3" 2 171 "0x3c"
d G "CCP_USE_TIMER3" 2 172 "0x100"
v G "CCP_1" 2 173 "int16"
d G "SPI_MASTER" 2 180 "0x20"
d G "SPI_SLAVE" 2 181 "0x24"
d G "SPI_L_TO_H" 2 182 "0"
d G "SPI_H_TO_L" 2 183 "0x10"
d G "SPI_CLK_DIV_4" 2 184 "0"
d G "SPI_CLK_DIV_16" 2 185 "1"
d G "SPI_CLK_DIV_64" 2 186 "2"
d G "SPI_CLK_T2" 2 187 "3"
d G "SPI_SS_DISABLED" 2 188 "1"
d G "SPI_SAMPLE_AT_END" 2 190 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 191 "0x4000"
d G "UART_ADDRESS" 2 197 "2"
d G "UART_DATA" 2 198 "4"
d G "UART_AUTODETECT" 2 199 "8"
d G "UART_AUTODETECT_NOWAIT" 2 200 "9"
d G "UART_WAKEUP_ON_RDA" 2 201 "10"
d G "UART_SEND_BREAK" 2 202 "13"
d G "VREF_LOW" 2 206 "0xa0"
d G "VREF_HIGH" 2 207 "0x80"
d G "VREF_F5" 2 209 "0x40"
d G "VREF_COMP" 2 210 "0x10"
d G "LVD_LVDIN" 2 215 "0x1F"
d G "LVD_45" 2 216 "0x1E"
d G "LVD_42" 2 217 "0x1D"
d G "LVD_40" 2 218 "0x1C"
d G "LVD_38" 2 219 "0x1B"
d G "LVD_36" 2 220 "0x1A"
d G "LVD_35" 2 221 "0x19"
d G "LVD_33" 2 222 "0x18"
d G "LVD_30" 2 223 "0x17"
d G "LVD_28" 2 224 "0x16"
d G "LVD_27" 2 225 "0x15"
d G "LVD_25" 2 226 "0x14"
d G "LVD_24" 2 227 "0x13"
d G "LVD_23" 2 228 "0x12"
d G "LVD_22" 2 229 "0x11"
d G "LVD_21" 2 230 "0x10"
d G "LVD_TRIGGER_BELOW" 2 232 "0"
d G "LVD_TRIGGER_ABOVE" 2 233 "0x80"
d G "OSC_31KHZ" 2 239 "0"
d G "OSC_125KHZ" 2 240 "0x10"
d G "OSC_250KHZ" 2 241 "0x20"
d G "OSC_500KHZ" 2 242 "0x30"
d G "OSC_1MHZ" 2 243 "0x40"
d G "OSC_2MHZ" 2 244 "0x50"
d G "OSC_4MHZ" 2 245 "0x60"
d G "OSC_8MHZ" 2 246 "0x70"
d G "OSC_16MHZ" 2 247 "0x4060"
d G "OSC_32MHZ" 2 248 "0x4070"
d G "OSC_TIMER1" 2 250 "1"
d G "OSC_INTRC" 2 251 "2"
d G "OSC_NORMAL" 2 252 "0"
d G "OSC_IDLE_MODE" 2 254 "0x80"
d G "OSC_31250" 2 255 "0x8000"
d G "OSC_PLL_ON" 2 256 "0x4000"
d G "OSC_PLL_OFF" 2 257 "0"
d G "OSC_STATE_STABLE" 2 261 "4"
d G "OSC_STATE_EXT_RUNNING" 2 262 "8"
d G "ADC_OFF" 2 269 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 270 "0x100"
d G "ADC_CLOCK_DIV_4" 2 271 "0x04"
d G "ADC_CLOCK_DIV_8" 2 272 "0x01"
d G "ADC_CLOCK_DIV_16" 2 273 "0x05"
d G "ADC_CLOCK_DIV_32" 2 274 "0x02"
d G "ADC_CLOCK_DIV_64" 2 275 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 276 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 278 "0x00"
d G "ADC_TAD_MUL_2" 2 279 "0x08"
d G "ADC_TAD_MUL_4" 2 280 "0x10"
d G "ADC_TAD_MUL_6" 2 281 "0x18"
d G "ADC_TAD_MUL_8" 2 282 "0x20"
d G "ADC_TAD_MUL_12" 2 283 "0x28"
d G "ADC_TAD_MUL_16" 2 284 "0x30"
d G "ADC_TAD_MUL_20" 2 285 "0x38"
d G "NO_ANALOGS" 2 288 "0x0F" "None"
d G "ALL_ANALOG" 2 289 "0x00" "A0 A1 A2 A3 A5 B1 B4 B0"
d G "AN0_TO_AN9" 2 290 "0x05" "A0 A1 A2 A3 A5 B1 B4"
d G "AN0_TO_AN8" 2 291 "0x06" "A0 A1 A2 A3 A5 B1"
d G "AN0_TO_AN4" 2 292 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 293 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 294 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 295 "0x0D" "A0 A1"
d G "AN0" 2 296 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 2 297 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 2 298 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 2 299 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 2 300 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 2 301 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 2 302 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 2 303 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 2 304 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 2 305 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 308 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 309 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 310 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 311 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 315 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 316 "1"
d G "ADC_READ_ONLY" 2 317 "6"
d G "L_TO_H" 2 329 "0x40"
d G "H_TO_L" 2 330 "0"
d G "GLOBAL" 2 332 "0xF2C0"
d G "INT_RTCC" 2 333 "0xF220"
d G "INT_TIMER0" 2 334 "0xF220"
d G "INT_TIMER1" 2 335 "0x9D01"
d G "INT_TIMER2" 2 336 "0x9D02"
d G "INT_TIMER3" 2 337 "0xA002"
d G "INT_EXT" 2 338 "0xF210"
d G "INT_EXT1" 2 339 "0xF008"
d G "INT_EXT2" 2 340 "0xF010"
d G "INT_RB" 2 341 "0xFFF208"
d G "INT_AD" 2 342 "0x9D40"
d G "INT_RDA" 2 343 "0x9D20"
d G "INT_TBE" 2 344 "0x9D10"
d G "INT_SSP" 2 345 "0x9D08"
d G "INT_CCP1" 2 346 "0x9D04"
d G "INT_BUSCOL" 2 347 "0xA008"
d G "INT_LOWVOLT" 2 348 "0xA004"
d G "INT_CANIRX" 2 349 "0xA380"
d G "INT_CANWAKE" 2 350 "0xA340"
d G "INT_CANERR" 2 351 "0xA320"
d G "INT_EEPROM" 2 352 "0xA010"
d G "INT_CANTX2" 2 353 "0xA310"
d G "INT_CANTX1" 2 354 "0xA308"
d G "INT_CANTX0" 2 355 "0xA304"
d G "INT_CANRX1" 2 356 "0xA302"
d G "INT_CANRX0" 2 357 "0xA301"
d G "INT_OSCF" 2 358 "0xA080"
D G "_STDLIB" 3 12 ""
D G "RAND_MAX" 3 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 3 24 "1"
T G "div_t" 3 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 3 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 18 "unsigned int16"
D G "size_t" 4 21 "unsigned int8"
D G "wchar_t" 4 22 "char"
D G "NULL" 4 23 "0"
D G "offsetof" 4 25 "(s,f) (offsetofbit(s,f)/8)"
C L "atof" 3 43 2 "FUNCTION"
C L "atof" 3 46 1 "*"
C L "atof" 3 46 1 "*"
V L "s" 3 50 "*int8"
F G "atof" 3 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 3 69 1 "*"
C L "atof" 3 69 1 "*"
C L "atof" 3 69 1 "*"
V L "s" 3 74 "*int8"
F G "atoe" 3 74 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 3 76 1 "*"
C L "atoe" 3 76 1 "*"
V L "s" 3 80 "*int8"
F G "atoi" 3 80 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 3 88 "*int8"
F G "atoi32" 3 88 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 3 76 2 "FUNCTION"
V L "num" 3 109 "sint32"
V L "base" 3 109 "int8"
V L "s" 3 109 "*int8"
F G "itoa" 3 109 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 3 111 1 "*"
C L "itoa" 3 111 1 "*"
V L "s" 3 115 "*int8"
F G "atol" 3 115 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 3 117 1 "*"
C L "atol" 3 117 1 "*"
C L "atol" 3 117 1 "*"
V L "s" 3 123 "*int8"
V L "endptr" 3 123 "*int8"
F G "strtod" 3 123 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 3 117 2 "FUNCTION"
C L "strtod" 3 126 1 "*"
C L "strtod" 3 126 1 "*"
C L "strtod" 3 126 2 "*"
C L "strtod" 3 139 1 "*"
C L "strtod" 3 139 1 "*"
C L "strtod" 3 139 1 "*"
C L "strtod" 3 139 1 "*"
V L "s" 3 145 "*int8"
V L "endptr" 3 145 "*int8"
V L "base" 3 145 "sint8"
F G "strtol" 3 145 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 3 147 1 "*"
C L "strtol" 3 147 1 "*"
C L "strtol" 3 147 1 "*"
C L "strtol" 3 147 1 "*"
V L "s" 3 153 "*int8"
V L "endptr" 3 153 "*int8"
V L "base" 3 153 "sint8"
F G "strtoul" 3 153 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 3 147 1 "FUNCTION"
C L "strtoul" 3 159 1 "*"
C L "strtoul" 3 159 1 "*"
C L "strtoul" 3 159 1 "*"
C L "strtoul" 3 159 1 "*"
C L "strtoul" 3 159 1 "*"
F G "rand" 3 168 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
C L "rand" 3 170 1 "*"
V L "seed" 3 190 "int32"
F G "srand" 3 190 "void(int32 seed)" "Memory management functions"
C L "srand" 3 170 3 "FUNCTION"
V L "string" 3 204 "*int8"
F G "system" 3 204 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 3 170 1 "FUNCTION"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 1 "*"
C L "system" 3 210 4 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
C L "system" 3 228 1 "*"
D G "labs" 3 248 "abs"
V L "numer" 3 250 "sint8"
V L "denom" 3 250 "sint8"
F G "div" 3 250 "div_t(sint8 numer,sint8 denom)"
V L "numer" 3 251 "sint16"
V L "denom" 3 251 "sint16"
F G "ldiv" 3 251 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 3 228 4 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
D G "_STRING" 5 12 ""
C L "ldiv" 4 2 7 "FUNCTION"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 5 19 10 "FUNCTION"
V L "s1" 5 34 "*int8"
V L "s2" 5 34 "*int8"
V L "n" 5 34 "int8"
F G "memmove" 5 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 5 36 "*int8"
V L "sc2" 5 37 "*int8"
C L "strcopy" 5 19 3 "FUNCTION"
V L "s1" 5 53 "*int8"
V L "s2" 5 53 "*int8"
F G "strcopy" 5 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 55 "*int8"
C L "strncpy" 5 19 4 "FUNCTION"
V L "s1" 5 69 "*int8"
V L "s2" 5 69 "*int8"
V L "n" 5 69 "int8"
F G "strncpy" 5 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 5 71 "*int8"
C L "strcat" 5 19 3 "FUNCTION"
V L "s1" 5 86 "*int8"
V L "s2" 5 86 "*int8"
F G "strcat" 5 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 88 "*int8"
C L "strncat" 5 19 2 "FUNCTION"
V L "s1" 5 104 "*int8"
V L "s2" 5 104 "*int8"
V L "n" 5 104 "int8"
F G "strncat" 5 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 5 106 "*int8"
C L "memcmp" 5 19 3 "FUNCTION"
V L "s1" 5 128 "*int8"
V L "s2" 5 128 "*int8"
V L "n" 5 128 "int8"
F G "memcmp" 5 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 5 130 "*int8"
V L "su2" 5 130 "*int8"
C L "strcmp" 5 19 2 "FUNCTION"
V L "s1" 5 142 "*int8"
V L "s2" 5 142 "*int8"
F G "strcmp" 5 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 5 19 2 "FUNCTION"
V L "s1" 5 152 "*int8"
V L "s2" 5 152 "*int8"
F G "strcoll" 5 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 5 19 4 "FUNCTION"
V L "s1" 5 165 "*int8"
V L "s2" 5 165 "*int8"
V L "n" 5 165 "int8"
F G "strncmp" 5 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 5 19 3 "FUNCTION"
V L "s1" 5 177 "*int8"
V L "s2" 5 177 "*int8"
V L "n" 5 177 "int8"
F G "strxfrm" 5 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 5 179 "*int8"
V L "n1" 5 180 "int8"
C L "memchr" 5 19 3 "FUNCTION"
V L "s" 5 199 "*int8"
V L "c" 5 199 "int8"
V L "n" 5 199 "int8"
F G "memchr" 5 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 5 201 "int8"
V L "su" 5 202 "*int8"
C L "strchr" 5 19 2 "FUNCTION"
V L "s" 5 213 "*int8"
V L "c" 5 213 "int8"
F G "strchr" 5 214 "*int8(*int8 s,int8 c)"
V L "s1" 5 225 "*int8"
V L "s2" 5 225 "*int8"
F G "strcspn" 5 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 227 "*int8"
V L "sc2" 5 227 "*int8"
C L "strpbrk" 5 19 4 "FUNCTION"
V L "s1" 5 240 "*int8"
V L "s2" 5 240 "*int8"
F G "strpbrk" 5 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 242 "*int8"
V L "sc2" 5 242 "*int8"
C L "strrchr" 5 19 2 "FUNCTION"
V L "s" 5 255 "*int8"
V L "c" 5 255 "int8"
F G "strrchr" 5 256 "*int8(*int8 s,int8 c)"
V L "p" 5 257 "*int8"
V L "s1" 5 270 "*int8"
V L "s2" 5 270 "*int8"
F G "strspn" 5 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 5 272 "*int8"
V L "sc2" 5 272 "*int8"
C L "strstr" 5 19 6 "FUNCTION"
V L "s1" 5 289 "*int8"
V L "s2" 5 289 "*int8"
F G "strstr" 5 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 5 291 "*int8"
V L "t" 5 291 "*int8"
C L "strtok" 5 19 13 "FUNCTION"
V L "s1" 5 328 "*int8"
V L "s2" 5 328 "*int8"
F G "strtok" 5 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 5 330 "*int8"
V L "end" 5 330 "*int8"
V L "save" 5 331 "*int8"
V L "s" 5 377 "*int8"
F G "strlen" 5 378 "*int8(*int8 s)"
V L "sc" 5 379 "*int8"
C L "stricmp" 5 19 2 "FUNCTION"
V L "s1" 5 388 "*int8"
V L "s2" 5 388 "*int8"
F G "stricmp" 5 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 5 19 3 "FUNCTION"
V L "s" 5 402 "*int8"
F G "strlwr" 5 403 "*int8(*int8 s)"
V L "p" 5 404 "*int8"
V L "numer" 3 273 "sint8"
V L "denom" 3 273 "sint8"
F G "div" 3 274 "div_t(sint8 numer,sint8 denom)"
V L "val" 3 275 "div_t"
V L "numer" 3 281 "sint16"
V L "denom" 3 281 "sint16"
F G "ldiv" 3 282 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 3 283 "ldiv_t"
V L "s" 3 289 "*int8"
F G "atof" 3 290 "float(*int8 s)"
V L "pow10" 3 291 "float"
V L "result" 3 292 "float"
V L "sign" 3 293 "int8"
V L "c" 3 294 "int8"
V L "ptr" 3 295 "int8"
V L "s" 3 410 "*int8"
F G "atoe" 3 411 "float(*int8 s)"
V L "pow10" 3 412 "float"
V L "result" 3 413 "float"
V L "sign" 3 414 "int8"
V L "expsign" 3 415 "int8"
V L "c" 3 416 "int8"
V L "ptr" 3 417 "int8"
V L "i" 3 418 "int8"
V L "exp" 3 419 "float"
V L "expcnt" 3 420 "int8"
C L "atoe" 3 446 1 "FUNCTION"
V L "s" 3 477 "*int8"
F G "atoi" 3 478 "sint8(*int8 s)"
V L "result" 3 479 "sint8"
V L "sign" 3 480 "int8"
V L "base" 3 480 "int8"
V L "index" 3 480 "int8"
V L "c" 3 481 "int8"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
C L "atoi" 3 446 1 "FUNCTION"
V L "s" 3 546 "*int8"
F G "atol" 3 547 "sint16(*int8 s)"
V L "result" 3 548 "sint16"
V L "sign" 3 549 "int8"
V L "base" 3 549 "int8"
V L "index" 3 549 "int8"
V L "c" 3 550 "int8"
C L "atol" 3 446 1 "FUNCTION"
C L "atol" 3 446 1 "FUNCTION"
C L "atol" 3 446 1 "FUNCTION"
C L "atol" 3 446 1 "FUNCTION"
C L "mult_with10" 3 446 1 "FUNCTION"
V L "num" 3 613 "int32"
F G "mult_with10" 3 614 "sint32(int32 num)"
V L "s" 3 619 "*int8"
F G "atoi32" 3 620 "sint32(*int8 s)"
V L "result" 3 621 "sint32"
V L "sign" 3 622 "int8"
V L "base" 3 622 "int8"
V L "index" 3 622 "int8"
V L "c" 3 623 "int8"
C L "atoi32" 3 446 1 "FUNCTION"
C L "atoi32" 3 446 1 "FUNCTION"
C L "atoi32" 3 446 1 "FUNCTION"
C L "atoi32" 3 446 1 "FUNCTION"
C L "atoi32" 3 446 1 "FUNCTION"
V L "num" 3 818 "sint32"
V L "base" 3 818 "int8"
V L "s" 3 818 "*int8"
F G "itoa" 3 819 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 3 820 "int32"
V L "i" 3 821 "int8"
V L "sign" 3 821 "int8"
V L "cnt" 3 821 "int8"
V L "c" 3 822 "int8"
C L "itoa" 3 446 1 "FUNCTION"
C L "itoa" 3 446 1 "FUNCTION"
C L "itoa" 3 446 1 "FUNCTION"
C L "itoa" 3 446 1 "FUNCTION"
C L "itoa" 3 446 1 "FUNCTION"
V L "s" 3 856 "*int8"
V L "endptr" 3 856 "*int8"
F G "strtod" 3 856 "float(*int8 s,*int8 endptr)"
V L "pow10" 3 857 "float"
V L "result" 3 858 "float"
V L "sign" 3 859 "int8"
V L "point" 3 859 "int8"
V L "c" 3 860 "int8"
V L "ptr" 3 861 "int8"
V L "s" 3 1118 "*int8"
V L "endptr" 3 1118 "*int8"
V L "base" 3 1118 "sint8"
F G "strtoul" 3 1119 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 3 1120 "*int8"
V L "s1" 3 1120 "*int8"
V L "sd" 3 1120 "*int8"
V L "x" 3 1121 "int16"
V L "sign" 3 1122 "int8"
V L "digits" 3 1123 "int8[1]"
C L "strtoul" 3 446 1 "FUNCTION"
C L "strtoul" 3 446 1 "FUNCTION"
C L "strtoul" 3 446 1 "FUNCTION"
V L "s" 3 1180 "*int8"
V L "endptr" 3 1180 "*int8"
V L "base" 3 1180 "sint8"
F G "strtol" 3 1181 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 3 1182 "*int8"
V L "s1" 3 1182 "*int8"
V L "sd" 3 1182 "*int8"
V L "x" 3 1183 "sint16"
V L "sign" 3 1184 "int8"
V L "digits" 3 1185 "int8[1]"
C L "strtol" 3 446 1 "FUNCTION"
C L "strtol" 3 446 1 "FUNCTION"
C L "strtol" 3 446 1 "FUNCTION"
V L "string" 3 1243 "*int8"
F G "system" 3 1244 "sint8(*int8 string)"
V L "s" 3 1248 "*int8"
V L "n" 3 1248 "int8"
F G "mblen" 3 1249 "int8(*int8 s,int8 n)"
V L "pwc" 3 1253 "*int8"
V L "s" 3 1253 "*int8"
V L "n" 3 1253 "int8"
F G "mbtowc" 3 1254 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 3 1259 "*int8"
V L "wchar" 3 1259 "int8"
F G "wctomb" 3 1260 "int8(*int8 s,int8 wchar)"
V L "pwcs" 3 1265 "*int8"
V L "s" 3 1265 "*int8"
V L "n" 3 1265 "int8"
F G "mbstowcs" 3 1266 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 3 1271 "*int8"
V L "pwcs" 3 1271 "*int8"
V L "n" 3 1271 "int8"
F G "wcstombs" 3 1272 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 3 1281 "int32"
F G "rand" 3 1284 "int16()"
V L "seed" 3 1289 "int32"
F G "srand" 3 1290 "void(int32 seed)"
V L "p1" 3 1298 "*int8"
V L "p2" 3 1298 "*int8"
T G "*_Cmpfun" 3 1298 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 3 1300 "*int8"
V L "qitems" 3 1300 "int8"
V L "qsize" 3 1300 "int8"
V L "cmp" 3 1300 "_Cmpfun"
F G "qsort" 3 1300 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 3 1301 "int8"
V L "j" 3 1301 "int8"
V L "i" 3 1301 "int8"
V L "l" 3 1301 "int8"
V L "done" 3 1302 "int1"
V L "t" 3 1303 "int8[16]"
V L "key" 3 1328 "*int8"
V L "base" 3 1328 "*int8"
V L "num" 3 1328 "int8"
V L "width" 3 1328 "int8"
V L "cmp" 3 1328 "_Cmpfun"
F G "bsearch" 3 1329 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 3 1330 "*int8"
V L "q" 3 1330 "*int8"
V L "n" 3 1331 "int8"
V L "pivot" 3 1332 "int8"
V L "val" 3 1333 "sint8"
C L "bsearch" 3 446 1 "FUNCTION"
D G "CS" 7 1 "pin_c2"
D G "delayMAX" 7 2 "300"
V G "relevalue" 7 4 "int8"
V L "value" 7 6 "int8"
F G "write4896" 7 7 "void(int8 value)"
V G "lastcommand" 8 1 "int8"
V L "rx_id" 8 2 "int32"
V L "buffer" 8 2 "*int8"
V L "rx_len" 8 2 "int8"
V L "rx_stat" 8 2 "int8"
F G "can_Pop" 8 2 "int8(int32 rx_id,*int8 buffer,int8 rx_len,int8 rx_stat)"
V L "c" 8 3 "int8"
F G "catoi" 8 4 "int8(int8 c)"
F G "printCAN" 8 41 "void()"
V L "prxid" 8 44 "int32"
V L "prxl" 8 45 "int8"
V L "prxs" 8 45 "int8"
V L "x" 8 45 "int8"
V L "pbuffer" 8 46 "int8[8]"
F G "showconsole" 8 62 "void()"
F G "showoutputs" 8 75 "void()"
F G "showinputs" 8 85 "void()"
V L "c" 8 97 "int8"
F G "console" 8 98 "void(int8 c)"
V L "aux" 8 100 "int8"
V L "i" 8 101 "int8" "printf("console : %c ",c);"
C L "console" 8 117 1 "FUNCTION"
C L "console" 8 117 1 "FUNCTION"
V G "x" 0 16 "int8"
V G "remote" 0 17 "int1"
F G "canTransmit" 0 18 "void()"
V G "ADRESS" 0 19 "int8"
V L "tx_id" 0 20 "int32"
V L "tx_buffer" 0 20 "*int8"
V L "tx_length" 0 20 "int8"
V L "tx_priority" 0 20 "int8"
V L "tx_extendedID" 0 20 "int8"
V L "tx_emptyframe" 0 20 "int8"
F G "can_push" 0 20 "int8(int32 tx_id,*int8 tx_buffer,int8 tx_length,int8 tx_priority,int8 tx_extendedID,int8 tx_emptyframe)"
D G "Push_b" 9 1 "0"
D G "Switch_" 9 2 "1"
V G "out_value" 9 4 "int8"
V G "switch_value" 9 5 "int8"
V G "switch_modes" 9 6 "int8"
V G "what_control_what" 9 7 "int8[8]"
V L "curr_out_value" 9 9 "int8"
V L "curr_swit_value" 9 9 "int8"
V L "last_swit_value" 9 9 "int8"
V L "mode" 9 9 "int8"
F G "decisor" 9 10 "int8(int8 curr_out_value,int8 curr_swit_value,int8 last_swit_value,int8 mode)"
C L "decisor" 9 24 1 "FUNCTION"
C L "decisor" 9 24 1 "FUNCTION"
F G "output_refresh" 9 33 "void()"
V L "oaux1" 9 34 "int8"
V L "oaux2" 9 34 "int8"
V L "out" 9 34 "int8"
V L "old_switch" 9 35 "int8"
V L "oau" 9 35 "int8"
V L "buffer" 9 36 "int8[6]"
C L "output_refresh" 9 24 1 "FUNCTION"
D G "EADRESS" 0 23 "4"
D G "DEV_ID" 0 24 "0"
D G "Set_Value" 10 2 "1"
D G "Get_Value" 10 3 "2"
D G "Value_Ans" 10 4 "3"
D G "Ping_Request" 10 5 "4"
D G "Ping_Ans" 10 6 "5"
D G "Set_Configuration" 10 7 "6"
D G "Get_Configuration" 10 8 "7"
D G "Configuration_Ans" 10 9 "8"
D G "Reset" 10 10 "9"
D G "Direct_Adress" 10 11 "10"
D G "Indirect_adress_config" 10 12 "11"
D G "Indirect_Set_Value" 10 13 "12"
D G "man_val_change" 10 14 "13"
D G "newadr" 10 15 "14"
D G "Set_virtual_int" 10 16 "15"
D G "Get_virtual_int" 10 17 "16"
D G "Virtual_int_Ans" 10 18 "17"
D G "Set_glob_adr" 10 19 "18"
D G "Get_glob_adr" 10 20 "19"
D G "glob_adr_ans" 10 21 "20"
V L "id" 10 22 "int32"
V L "data" 10 22 "*int8"
V L "len" 10 22 "int8"
V L "priority" 10 22 "int8"
V L "ext" 10 22 "int8"
V L "rtr" 10 22 "int8"
F G "can_putd" 10 22 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)" "set configuration"
C L "can_putd" 10 1 9 "FUNCTION"
V L "adr" 10 38 "int8"
F G "conv_adr" 10 39 "int16(int8 adr)"
V L "id" 10 42 "int32"
V L "buffer" 10 42 "*int8"
V L "len" 10 42 "int8"
F G "proc_can" 10 42 "void(int32 id,*int8 buffer,int8 len)"
V L "dest_sub_adr" 10 43 "int8"
V L "send_adr" 10 43 "int8"
V L "send_subadr" 10 43 "int8"
V L "type" 10 43 "int8"
V L "data0" 10 43 "int8"
V L "data1" 10 43 "int8"
V L "tbuffer" 10 44 "int8[7]"
F G "pong" 10 100 "void()"
V L "data" 10 101 "int8[4]"
D G "EBRP" 0 29 "7"
D G "ESEG2PHTS" 0 30 "5"
D G "ESJW" 0 31 "6"
D G "EPHSEG1" 0 32 "1"
D G "EPHSEG2" 0 33 "2"
D G "EPRSEG" 0 34 "3"
D G "NODEBUG" 0 38 "0"
D G "D_RS232" 0 39 "1"
D G "DCAN" 0 40 "2"
F G "configure" 11 4 "void()"
V L "string" 11 7 "int8[30]"
V L "cc" 11 8 "int8"
V L "ci" 11 9 "int8"
V L "ci2" 11 9 "int8"
V G "DEBUG_MODE" 0 43 "int8"
V G "ch" 0 44 "int8"
F G "RDA_isr" 0 48 "void()"
F G "LOWVOLT_isr" 0 56 "void()"
F G "OSCF_isr" 0 64 "void()"
D G "CAN_USE_EXTENDED_ID" 0 70 "FALSE"
D G "__CCS_CAN18xxx8_LIB_DEFINES__" 13 20 ""
D G "CAN_DO_DEBUG" 13 23 "FALSE"
D G "CAN_BRG_SYNCH_JUMP_WIDTH" 13 31 "0" "synchronized jump width (def: 1 x Tq)"
D G "CAN_BRG_PRESCALAR" 13 35 "4" "baud rate generator prescalar (def: 4) ( Tq = (2 x (PRE + 1))/Fosc )"
D G "CAN_BRG_SEG_2_PHASE_TS" 13 39 "TRUE" "phase segment 2 time select bit (def: freely programmable)"
D G "CAN_BRG_SAM" 13 43 "0" "sample of the can bus line (def: bus line is sampled 1 times prior to sample point)"
D G "CAN_BRG_PHASE_SEGMENT_1" 13 47 "5" "phase segment 1 (def: 6 x Tq)"
D G "CAN_BRG_PROPAGATION_TIME" 13 51 "2" "propagation time select (def: 3 x Tq)"
D G "CAN_BRG_WAKE_FILTER" 13 55 "FALSE" "selects can bus line filter for wake up bit"
D G "CAN_BRG_PHASE_SEGMENT_2" 13 59 "5" "phase segment 2 time select (def: 6 x Tq)"
D G "CAN_USE_RX_DOUBLE_BUFFER" 13 63 "TRUE" "if buffer 0 overflows, do NOT use buffer 1 to put buffer 0 data"
D G "CAN_ENABLE_DRIVE_HIGH" 13 67 "0"
D G "CAN_ENABLE_CAN_CAPTURE" 13 71 "0"
V G "CANCON" 13 83 "{int1 void0,int3 win,int1 abat,int3 reqop}"
V G "CANSTAT" 13 95 "{int1 void0,int3 icode,int1 void4,int3 opmode}"
V G "COMSTAT" 13 108 "{int1 ewarn,int1 rxwarn,int1 txwarn,int1 rxbp,int1 txbp,int1 txbo,int1 rx1ovfl,int1 rx0ovfl}"
V G "BRGCON1" 13 115 "{int6 brp,int2 sjw}"
V G "BRGCON2" 13 124 "{int3 prseg,int3 seg1ph,int1 sam,int1 seg2phts}"
V G "BRGCON3" 13 133 "{int3 seg2ph,int3 void543,int1 wakfil,int1 void7}"
V G "CIOCON" 13 142 "{int4 void3210,int1 cancap,int1 endrhi,int2 void76}"
V G "TXB0CON" 13 155 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB1CON" 13 156 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB2CON" 13 157 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXBaCON" 13 158 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
D G "RX0MASK" 13 181 "0xF1B" "rxm0eidl"
D G "RX1MASK" 13 182 "0xF1F" "rxm1eidl"
D G "RX0FILTER0" 13 183 "0xF03" "rxf0eidl"
D G "RX0FILTER1" 13 184 "0xF07" "rxf1eidl"
D G "RX1FILTER2" 13 185 "0xF0B" "rxf2eidl"
D G "RX1FILTER3" 13 186 "0xF0F" "rxf3eidl"
D G "RX1FILTER4" 13 187 "0xF13" "rxf4eidl"
D G "RX1FILTER5" 13 188 "0xF17" "rxf5eidl"
D G "RXB0ID" 13 189 "0xF64" "rxb0eidl"
D G "RXB1ID" 13 190 "0xF54" "rxb1eidl"
D G "TXB0ID" 13 191 "0xF44" "txb0eidl"
D G "TXB1ID" 13 192 "0xF34" "txb1eidl"
D G "TXB2ID" 13 193 "0xF24" "tsb2eidl"
D G "TXRXBaID" 13 194 "0xF64"
V G "TXB0DLC" 13 211 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB1DLC" 13 212 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB2DLC" 13 213 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXBaDLC" 13 214 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "RXB0CON" 13 236 "{int1 filthit0,int1 jtoff,int1 rxb0dben,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "RXB1CON" 13 246 "{int3 filthit,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "TXRXBaSIDL" 13 269 "{int3 void012,int1 ext,int1 srr,int3 void567}"
V G "RXB0DLC" 13 280 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXB1DLC" 13 281 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXBaDLC" 13 282 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
D G "CAN_MASK_ACCEPT_ALL" 13 337 "0"
F G "can_init" 13 360 "void()"
F G "can_set_baud" 13 361 "void()"
V L "mode" 13 362 "CAN_OP_MODE"
F G "can_set_mode" 13 362 "void(CAN_OP_MODE mode)"
V L "addr" 13 363 "*int8"
V L "id" 13 363 "int32"
V L "ext" 13 363 "int8"
F G "can_set_id" 13 363 "void(*int8 addr,int32 id,int8 ext)"
V L "addr" 13 364 "*int8"
V L "ext" 13 364 "int8"
F G "can_get_id" 13 364 "int32(*int8 addr,int8 ext)"
V L "id" 13 365 "int32"
V L "data" 13 365 "*int8"
V L "len" 13 365 "int8"
V L "priority" 13 365 "int8"
V L "ext" 13 365 "int8"
V L "rtr" 13 365 "int8"
F G "can_putd" 13 365 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)"
V L "id" 13 366 "int32"
V L "data" 13 366 "*int8"
V L "len" 13 366 "int8"
V L "stat" 13 366 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
F G "can_getd" 13 366 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv} stat,int8 ext,int8 rtr)"
D G "can_debug" 12 61 ""
D G "can_kbhit" 12 66 "()                 (RXB0CON.rxful || RXB1CON.rxful)"
D G "can_tbe" 12 67 "()                   (!TXB0CON.txreq || !TXB1CON.txreq || !TXB2CON.txreq)"
D G "can_abort" 12 68 "()                 (CANCON.abat=1)"
C L "can_getd" 12 65 11 "FUNCTION"
F G "can_init" 12 88 "void()"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_init" 12 65 1 "FUNCTION"
C L "can_set_baud" 12 65 6 "FUNCTION"
F G "can_set_baud" 12 127 "void()"
V L "mode" 12 140 "CAN_OP_MODE"
F G "can_set_mode" 12 140 "void(CAN_OP_MODE mode)"
C L "can_set_id" 12 65 8 "FUNCTION"
V L "addr" 12 160 "*int8"
V L "id" 12 160 "int32"
V L "ext" 12 160 "int8"
F G "can_set_id" 12 160 "void(*int8 addr,int32 id,int8 ext)"
V L "ptr" 12 161 "*int8"
C L "can_set_id" 12 65 2 "FUNCTION"
C L "can_set_id" 12 65 2 "FUNCTION"
C L "can_set_id" 12 65 2 "FUNCTION"
C L "can_set_id" 12 65 1 "FUNCTION"
C L "can_set_id" 12 65 1 "FUNCTION"
C L "can_set_id" 12 65 1 "FUNCTION"
C L "can_set_id" 12 65 1 "FUNCTION"
C L "can_set_id" 12 65 1 "FUNCTION"
C L "can_set_id" 12 65 2 "FUNCTION"
C L "can_set_id" 12 65 1 "FUNCTION"
C L "can_set_id" 12 65 1 "FUNCTION"
C L "can_set_id" 12 65 1 "FUNCTION"
C L "can_get_id" 12 65 9 "FUNCTION"
V L "addr" 12 220 "*int8"
V L "ext" 12 220 "int8"
F G "can_get_id" 12 220 "int32(*int8 addr,int8 ext)"
V L "ret" 12 221 "int32"
V L "ptr" 12 222 "*int8"
C L "can_get_id" 12 65 1 "FUNCTION"
C L "can_get_id" 12 65 1 "FUNCTION"
C L "can_get_id" 12 65 1 "FUNCTION"
C L "can_get_id" 12 65 1 "FUNCTION"
C L "can_get_id" 12 65 1 "FUNCTION"
C L "can_get_id" 12 65 1 "FUNCTION"
C L "can_putd" 12 65 15 "FUNCTION"
V L "id" 12 274 "int32"
V L "data" 12 274 "*int8"
V L "len" 12 274 "int8"
V L "priority" 12 274 "int8"
V L "ext" 12 274 "int8"
V L "rtr" 12 274 "int8"
F G "can_putd" 12 274 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)"
V L "i" 12 275 "int8"
V L "txd0" 12 276 "*int8"
V L "port" 12 277 "int8"
C L "can_putd" 12 65 2 "FUNCTION"
C L "can_putd" 12 65 1 "FUNCTION"
C L "can_putd" 12 65 1 "FUNCTION"
C L "can_putd" 12 65 1 "FUNCTION"
C L "can_putd" 12 65 1 "FUNCTION"
C L "can_getd" 12 65 11 "FUNCTION"
V L "id" 12 357 "int32"
V L "data" 12 357 "*int8"
V L "len" 12 357 "int8"
V L "stat" 12 357 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
F G "can_getd" 12 358 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv} stat)"
V L "i" 12 359 "int8"
V L "ptr" 12 360 "*int8"
C L "can_getd" 12 65 1 "FUNCTION"
D G "CAN_RECEIVE_STACK_SIZE" 0 73 "1"
V G "can_rspoint" 0 74 "int8"
V G "can_rstack" 0 75 "int8[1][14]"
V G "can_rsfull" 0 76 "int1"
D G "can_receiver_full" 0 77 "() can_rsfull"
D G "CAN_TRANSMIT_STACK_SIZE" 0 78 "8"
V G "can_tspoint" 0 79 "int8"
V G "can_tstack" 0 80 "int8[8][13]"
V G "can_tsempty" 0 81 "int1"
D G "can_transmitter_empty" 0 82 "() can_tsempty"
F G "canReceive" 0 85 "void()"
V L "rx_id" 0 86 "int32"
V L "rx_len" 0 87 "int8"
V L "rx_stat" 0 87 "int8"
V L "buffer" 0 88 "int8[8]"
V L "i" 0 89 "int8"
V L "rx_id" 0 118 "int32"
V L "buffer" 0 118 "*int8"
V L "rx_len" 0 118 "int8"
V L "rx_stat" 0 118 "int8"
F G "can_Pop" 0 119 "int8(int32 rx_id,*int8 buffer,int8 rx_len,int8 rx_stat)"
V L "i" 0 120 "int8"
F G "canTransmit" 0 149 "void()"
V L "tx_id" 0 150 "int32"
V L "tx_length" 0 151 "int8"
V L "tx_priority" 0 152 "int8"
V L "tx_buffer" 0 153 "int8[8]"
V L "tx_extendedID" 0 154 "int1"
V L "tx_emptyframe" 0 155 "int1"
V L "i" 0 156 "int8"
V L "tx_id" 0 189 "int32"
V L "tx_buffer" 0 189 "*int8"
V L "tx_length" 0 189 "int8"
V L "tx_priority" 0 189 "int8"
V L "tx_extendedID" 0 189 "int8"
V L "tx_emptyframe" 0 189 "int8"
F G "can_push" 0 190 "int8(int32 tx_id,*int8 tx_buffer,int8 tx_length,int8 tx_priority,int8 tx_extendedID,int8 tx_emptyframe)"
V L "i" 0 191 "int8" "if(can_tspoint==-1)"
C L "can_push" 0 193 1 "FUNCTION"
F G "canrx0_int" 0 217 "void(*int8 tx_buffer,int8 tx_length,int8 tx_priority,int8 tx_extendedID,int8 tx_emptyframe)"
C L "canrx0_int" 0 193 1 "FUNCTION"
F G "canrx1_int" 0 228 "void(int8 tx_priority,int8 tx_extendedID,int8 tx_emptyframe)"
C L "canrx1_int" 0 193 1 "FUNCTION"
F G "cantx0_int" 0 239 "void(int8 tx_emptyframe)"
C L "cantx0_int" 0 193 1 "FUNCTION"
F G "cantx1_int" 0 244 "void()"
C L "cantx1_int" 0 193 1 "FUNCTION"
F G "cantx2_int" 0 249 "void()"
C L "cantx2_int" 0 193 1 "FUNCTION"
F G "canirx_int" 0 254 "void()"
C L "canirx_int" 0 193 1 "FUNCTION"
F G "canerr_int" 0 263 "void()"
C L "canerr_int" 0 193 1 "FUNCTION"
F G "MAIN" 0 271 "void()"
V L "timeout" 0 272 "int16"
V L "brp" 0 274 "int8"
V L "prseg" 0 274 "int8"
V L "PHSEG1" 0 274 "int8"
V L "PHSEG2" 0 274 "int8"
V L "sjw" 0 274 "int8"
V L "seg2phts" 0 274 "int8"
V L "mc" 0 275 "int8"
V L "rbuffer" 0 276 "int8[6]"
V L "stat" 0 276 "int8"
V L "lenght" 0 276 "int8"
V L "aux" 0 276 "int8"
V L "send_id" 0 277 "int32"
V L "au16" 0 278 "int16"
C L "MAIN" 0 193 1 "FUNCTION"
C L "MAIN" 0 193 1 "FUNCTION"
C L "MAIN" 0 193 1 "FUNCTION"
C L "MAIN" 0 193 4 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_vref" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
